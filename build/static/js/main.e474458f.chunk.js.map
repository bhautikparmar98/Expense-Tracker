{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpenseFilter.js","components/Charts/ChartBar.js","components/Charts/Charts.js","components/Expenses/ExpenseChart.js","components/Expenses/Expenses.js","components/NewExpenses/ExpenseForm.js","components/NewExpenses/NewExpenses.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ExpenseFilter","value","selected","onChange","event","onSelectYear","target","ChartBar","barFillheight","console","log","Math","round","maxvalue","style","height","label","Charts","dataPoints","dataPoint","maxExpense","ExpenseChart","chartDataPoints","expensesData","expenses","getMonth","ExpensesArray","max","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","ExpenseObj","Date","onSaveExpenseData","cancelExenpseForm","type","min","step","onClick","NewExpenses","showExpesneForm","setShowExpenseForm","expenseContent","expenseData","ExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevexpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e474458f.chunk.js","sourcesContent":["import React from 'react';\n\nimport './ExpenseDate.css';\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className='expense-date'>\n      <div className='expense-date__month'>{month}</div>\n      <div className='expense-date__year'>{year}</div>\n      <div className='expense-date__day'>{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = (props) => {\n  const classes = 'card ' + props.className;\n\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import React from 'react';\n\nimport ExpenseDate from './ExpenseDate';\nimport Card from '../UI/Card';\nimport './ExpenseItem.css';\n\nconst ExpenseItem = (props) => {\n\n  return (\n    <Card className='expense-item'>\n      <ExpenseDate date={props.date} />\n      <div className='expense-item__description'>\n        <h2>{props.title}</h2>\n        <div className='expense-item__price'>${props.amount}</div>\n      </div>\n    </Card>\n  );\n}\n\nexport default ExpenseItem;\n","import './ExpensesList.css'\r\nimport ExpenseItem from './ExpenseItem'\r\nconst ExpensesList = (props) =>{\r\n    if(props.items.length === 0){\r\n        return <h2 className='expenses-list__fallback'>Found no Expenses</h2>\r\n    }\r\n    return (\r\n        <ul className='expenses-list'>\r\n     { props.items.map( expense => (\r\n          <ExpenseItem\r\n          key={expense.id}  //Note: to render array we need to add \r\n                                  //key to tell react how to render exactly\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n     />\r\n      ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ExpensesList","import './ExpenseFilter.css'\r\n\r\nconst ExpenseFilter = (props) => {\r\n    const YearChangedHandler = (event)=>{\r\n        props.onSelectYear(event.target.value)\r\n    }\r\n    return (\r\n        <div className='expenses-filter'>\r\n        <div className='expenses-filter__control'>\r\n          <label>Filter by year</label>\r\n          <select value= {props.selected} onChange={YearChangedHandler}>\r\n            <option value='2022'>2022</option>\r\n            <option value='2021'>2021</option>\r\n            <option value='2020'>2020</option>\r\n            <option value='2019'>2019</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default ExpenseFilter","import react from 'react'\r\nimport './ChartBar.css'\r\nconst ChartBar = (props)=>{\r\n    let barFillheight = '0%';\r\n    console.log(props)\r\n    if(props.value>0){\r\n        barFillheight = Math.round( (props.value / props.maxvalue * 100) ) + '%'\r\n    }\r\n    return(\r\n        <div className='chart-bar'>\r\n        <div className='chart-bar__inner'>\r\n          <div className='chart-bar__fill' style={{height:barFillheight}}></div>\r\n        </div>\r\n        <div className='chart-bar__label'>{props.label}</div> \r\n       </div>\r\n    );\r\n}\r\nexport default ChartBar","import './Charts.css';\r\nimport ChartBar  from './ChartBar'\r\n\r\nconst Charts = (props)=>{\r\n    return <div className='chart'>\r\n        {props.dataPoints.map( dataPoint =><ChartBar \r\n        key ={dataPoint.label}\r\n        label={dataPoint.label}\r\n        value = {dataPoint.value}\r\n        maxvalue = {props.maxExpense}\r\n        />)}\r\n    </div>\r\n}\r\nexport default Charts","import Chart from '../Charts/Charts'\r\nimport Expenses from './Expenses';\r\nconst ExpenseChart = (props)=>{\r\n\r\n    const chartDataPoints = [\r\n        { label: 'Jan', value: 0 },\r\n        { label: 'Feb', value: 0 },\r\n        { label: 'Mar', value: 0 },\r\n        { label: 'Apr', value: 0 },\r\n        { label: 'May', value: 0 },\r\n        { label: 'Jun', value: 0 },\r\n        { label: 'Jul', value: 0 },\r\n        { label: 'Aug', value: 0 },\r\n        { label: 'Sep', value: 0 },\r\n        { label: 'Oct', value: 0 },\r\n        { label: 'Nov', value: 0 },\r\n        { label: 'Dec', value: 0 },\r\n    ];\r\n    for(let expenses of  props.expensesData){\r\n        console.log(expenses)\r\n        const expenseMonth = expenses.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expenses.amount\r\n    }\r\n    const ExpensesArray = chartDataPoints.map(dataPoint => dataPoint.value)\r\n    const maxExpense = Math.max(...ExpensesArray)\r\n\r\n\r\n    return <Chart maxExpense={maxExpense} dataPoints={chartDataPoints}/>\r\n}\r\n\r\nexport default ExpenseChart;","import React ,{useState}from 'react';\nimport ExpensesList from './ExpensesList'\nimport ExpenseItem from './ExpenseItem';\nimport Card from '../UI/Card';\nimport './Expenses.css';\nimport ExpenseFilter from './ExpenseFilter';\nimport ExpenseChart  from './ExpenseChart'\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState('2020')\n  const selectYearHandler = (year) =>{\n    setFilteredYear(year);\n   \n  }\n  console.log(filteredYear);\n  const filteredExpenses = props.items.filter(expense=>\n    {if(expense.date.getFullYear().toString() === filteredYear){return true}\n  });\n\n \n  return (<li>\n    <Card className=\"expenses\">\n    <ExpenseFilter selected={filteredYear} onSelectYear = {selectYearHandler}/>\n    <ExpenseChart expensesData={filteredExpenses}/>\n    <ExpensesList items={filteredExpenses} />\n    </Card>\n    </li>\n  );\n}\n\nexport default Expenses;\n","import { useState } from 'react/cjs/react.development'\r\nimport './ExpenseForm.css'\r\n\r\nconst ExpenseForm = (props)=>{\r\n    const [enteredTitle, setEnteredTitle] = useState('');\r\n    const [enteredAmount, setEnteredAmount] = useState('')\r\n    const [enteredDate, setEnteredDate] = useState('')\r\n    const onTitleChangeHandler = (event)=>{\r\n        setEnteredTitle(event.target.value);\r\n    }\r\n    const onAmountChangeHandler = (event)=>{\r\n        setEnteredAmount(event.target.value);\r\n    }\r\n    const onDateChangeHandler = (event)=>{\r\n        setEnteredDate(event.target.value);\r\n    }\r\n    const cancelHandlder = ()=>{\r\n        props.cancelExenpseForm()\r\n    }\r\n    const submitHandler = (event) =>{\r\n        event.preventDefault()\r\n        const ExpenseObj = {\r\n            title:enteredTitle,\r\n            amount:+enteredAmount,\r\n            date:new Date(enteredDate)\r\n        }\r\n        props.onSaveExpenseData(ExpenseObj);\r\n        props.cancelExenpseForm()\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n    }\r\n\r\n    return(\r\n    <form onSubmit={submitHandler}>\r\n    <div className='new-expense__controls'>\r\n        \r\n        <div className='new-expense__control'>\r\n        <label>Title</label>\r\n        <input type='text' value={enteredTitle} onChange={onTitleChangeHandler} />\r\n        </div>\r\n        <div className='new-expense__control'>\r\n        <label>Amount</label>\r\n        <input type='number' value={enteredAmount} onChange={onAmountChangeHandler} min=\"0.01\" step=\"0.01\"/>\r\n        </div>\r\n        <div className='new-expense__control'>\r\n        <label>Date</label>\r\n        <input type='Date' value={enteredDate} onChange={onDateChangeHandler} min=\"2019-01-01\" max=\"2022-12-31\" />\r\n        </div>\r\n    </div>\r\n    <div className='new-expense__actions'>\r\n            <button type=\"button\" onClick={cancelHandlder}>Cancel</button>\r\n            <button type=\"submit\">Add Expense</button>\r\n    </div>\r\n</form>);\r\n}\r\nexport default ExpenseForm","import {useState} from 'react'\r\nimport ExpenseForm from './ExpenseForm';\r\nimport './NewExpenses.css';\r\nconst NewExpenses= (props)=>{\r\n\r\n    let [showExpesneForm,setShowExpenseForm]=useState(false);\r\n    const showFormHandler = ()=>{\r\n        setShowExpenseForm(true)\r\n    }\r\n    const cancelFormHandler = ()=>{\r\n        setShowExpenseForm(false)\r\n    }\r\n   \r\n    const SaveExpenseDataHandler = (expenseData)=>{\r\n        const ExpenseData = {\r\n            ...expenseData,\r\n            id: Math.random().toString()\r\n        }\r\n        props.onAddExpense(ExpenseData)\r\n    }\r\n\r\n    let expenseContent = <button onClick={showFormHandler}>Add New Expenses</button>\r\n                    \r\n    if(showExpesneForm){\r\n        expenseContent = <ExpenseForm cancelExenpseForm={cancelFormHandler} onSaveExpenseData={SaveExpenseDataHandler} />\r\n    }\r\n    return (\r\n        <div className='new-expense'>\r\n                {expenseContent}\r\n        </div>\r\n        \r\n    )\r\n}\r\nexport default NewExpenses","import React ,{useState} from 'react';\n\nimport Expenses from './components/Expenses/Expenses';\nimport NewExpenses from './components/NewExpenses/NewExpenses';\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\nconst App = () => {\n\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES)\n  // return React.createElement(\n  //   'div',\n  //   {},\n  //   React.createElement('h2', {}, \"Let's get started!\"),\n  //   React.createElement(Expenses, { items: expenses })\n  // );\n\n  const AddExpenseHandler = (expense)=>{\n    setExpenses((prevexpenses)=>{\n      return [expense,...prevexpenses]\n    })\n    \n  }\n\n  return (\n    <div>\n      <NewExpenses  onAddExpense={AddExpenseHandler}/>\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}